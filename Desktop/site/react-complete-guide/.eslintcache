[{"C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\index.js":"1","C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\App.js":"2","C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\reportWebVitals.js":"3","C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\Person\\Person.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":2266,"mtime":1610389318180,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1610389283478,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1o99vb2",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\index.js",[],["20","21"],"C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\App.js",["22"],"import React, { Component } from 'react'\nimport './App.css';\nimport Person from './Person/Person'\nclass App extends Component{\n    state = {\n      siblings: [\n        { name: 'Ahmed', age: 24, id: 0},\n        { name: 'Amina', age: 22, id: 1},\n        { name: 'Manar', age: 13, id: 2},\n        { name: 'Malika', age: 49, id: 3},\n        { name: 'Hassen', age: 60, id: 4}\n\n      ],\n      showPeople: false\n    };\n    changeColour(e){\n      e.target.style.color = 'yellow'\n    }\n    changeName = (e, index) => {\n      const personIndex = this.state.siblings.findIndex(p => {\n          return p.id === index\n      })\n      const person = this.state.siblings[personIndex]\n      \n      const people = [...this.state.siblings]\n      people[personIndex].name = e.target.value\n      console.log(this.state.siblings)\n      this.setState({person: people})\n   }\n    showPeopleHandler(){\n      const reverse = this.state.showPeople\n      this.setState({showPeople: !reverse})\n    }\n    deletePerson = (index) => {\n      //always keep immutability in mind\n      const people = [...this.state.siblings];\n      people.splice(index, 1)\n      this.setState({siblings: people})\n    } \n   render(){\n     const btnStl = {\n       padding: '10px 15px',\n       backgroundColor: this.state.showPeople? 'red': 'green',\n       color: 'white',\n       border: 'none',\n       borderRadius: '8px',\n       fontWeight: '700',\n       cursor: 'pointer',\n       outline: 'none'\n     }\n     const btnTitle = this.state.showPeople? 'Hide People': 'Show People'\n     let persons = null\n     if (this.state.showPeople){\n       persons = this.state.siblings.map((comp, i) => {\n        return <Person \n        key={i} \n        id={i} \n        name={comp.name}\n        age={comp.age} \n        click={() => this.deletePerson(i)} \n        changeColour={this.changeColour} \n        changeName={(e) => this.changeName(e, i)}></Person>;\n      })\n     }\n     \n    return (\n      \n      <div className=\"App\">\n        <h1>React</h1>\n        {persons}\n        <button onClick={this.showPeopleHandler.bind(this)} style={btnStl}>{btnTitle}</button>\n      </div>\n   \n\n      // React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Another way of doing it'))\n    );\n   }\n \n}\n\nexport default App;\n","C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\reportWebVitals.js",[],"C:\\Users\\uw\\Desktop\\site\\react-complete-guide\\src\\Person\\Person.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":24,"column":13,"nodeType":"29","messageId":"30","endLine":24,"endColumn":19},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'person' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]